name: imx8mm-evk
summary: NXP i.MX8M Mini EVK support package
description: |
 Support files for booting i.MX8M Mini EVK board
version: 20-1
type: gadget

base: core20

architectures:
  - build-on: [amd64, arm64]
    run-on: arm64

confinement: strict
grade: stable

environment:
    LD_LIBRARY_PATH: ${SNAP}/usr/lib
    PATH: ${SNAP}/bin:${PATH}
    OPTEE_LIB: $SNAP/lib/optee_armtz
    OPTEE_FS_PARENT_PATH: $SNAP_COMMON

apps:
    tee-supplicant:
        adapter: none
        command: usr/sbin/tee-supplicant
        daemon: simple
        plugs:
            - tee

parts:
    arm-trusted-firmware:
        plugin: nil
        source: https://source.codeaurora.org/external/imx/imx-atf.git
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.2
        source-depth: 1
        override-build: |
            platform="imx8mm"
            make \
                CROSS_COMPILE=aarch64-linux-gnu- \
                PLAT=${platform} \
                BUILD_BASE=${SNAPCRAFT_PART_BUILD}/build \
                bl31 \
                -j$(nproc)
            make \
                CROSS_COMPILE=aarch64-linux-gnu- \
                PLAT=${platform} \
                BUILD_BASE=${SNAPCRAFT_PART_BUILD}/build-optee \
                SPD=opteed \
                bl31 \
                -j$(nproc)
            cp ${SNAPCRAFT_PART_BUILD}/build/${platform}/release/bl31.bin \
               ${SNAPCRAFT_PART_INSTALL}/bl31-${platform}.bin
            cp ${SNAPCRAFT_PART_BUILD}/build-optee/${platform}/release/bl31.bin \
               ${SNAPCRAFT_PART_INSTALL}/bl31-${platform}.bin-optee
        prime:
            - -*

    # optee signing keys: used for signing ot Trusted Applications
    optee-keys:
        plugin: dump
        source: https://git.launchpad.net/~ondrak/+git/dev-keys
        source-type: git
        source-branch: ta-keys
        organize:
            '*': ta-keys/
        prime:
             - -*

    optee-os:
        after:
            - optee-fde
            - optee-keys
        plugin: nil
        source: https://source.codeaurora.org/external/imx/imx-optee-os.git
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.2
        source-depth: 1
        override-build: |
            export ARCH="arm"
            export CROSS_COMPILE="aarch64-linux-gnu-"
            export CROSS_COMPILE_core="aarch64-linux-gnu-"
            export CROSS_COMPILE_ta_arm64="aarch64-linux-gnu-"
            export CFG_USER_TA_TARGETS="ta_arm64"
            export CFG_ARM64_core=y
            export DEBUG=0 \
            export CFG_TEE_CORE_LOG_LEVEL=1 \
            export CFG_TEE_TA_LOG_LEVEL=1 \
            export CFG_TEE_BENCHMARK=n
            # set NXP platform
            export PLATFORM=imx
            export PLATFORM_FLAVOR=mx8mmevk
            # add optee-fde TA
            cp -r ${SNAPCRAFT_STAGE}/optee-fde/ta/fde_key_handler ${SNAPCRAFT_PART_BUILD}/ta/
            # determine keys to be used
            TA_PUBLIC_KEY="${SNAPCRAFT_STAGE}/ta-keys/ta_public.pem"
            TA_SIGN_KEY="${SNAPCRAFT_STAGE}/ta-keys/ta_private.pem"
            make O=${SNAPCRAFT_PART_BUILD}/out -j$(nproc)
            make O=${SNAPCRAFT_PART_BUILD}/out -j$(nproc) \
                 CFG_EARLY_TA=y \
                 EARLY_TA_PATHS="out/ta/pkcs11/fd02c9da-306c-48c7-a49c-bbd827ae86ee.stripped.elf \
                                 out/ta/trusted_keys/f04a0fe7-1f5d-4b9b-abf7-619b85b4ce8c.stripped.elf \
                                 out/ta/fde_key_handler/fd1b2a86-3668-11eb-adc1-0242ac120002.stripped.elf"
            aarch64-linux-gnu-objcopy \
                 -O binary \
                 ${SNAPCRAFT_PART_BUILD}/out/core/tee.elf \
                 ${SNAPCRAFT_PART_INSTALL}/tee.bin
        prime:
            - -*

    optee-client:
        plugin: nil
        source: https://source.codeaurora.org/external/imx/imx-optee-client.git
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.2
        source-depth: 1
        override-build: |
            export ARCH="arm64"
            export CROSS_COMPILE="aarch64-linux-gnu-"
            export CFG_TEE_CLIENT_LOAD_PATH=""
            export CFG_TA_TEST_PATH=0
            export CFG_TEE_SUPP_LOG_LEVEL=0
            export DESTDIR=${SNAPCRAFT_PART_INSTALL}
            make -j$(nproc)
            make install
        stage:
            - usr/sbin
            - usr/lib/lib*so*

    optee-fde:
        plugin: dump
        source: git://git.launchpad.net/~ondrak/+git/optee-uc-fde
        source-type: git
        organize:
            '*': optee-fde/
        prime:
            - -*

    pub-signing-key:
        plugin: dump
        source: https://git.launchpad.net/~ondrak/+git/dev-keys
        source-type: git
        source-branch: master
        stage:
            - u-boot-pubkey.dtsi
        prime:
            - -*

    u-boot:
        after:
            - pub-signing-key
        plugin: nil
        source: https://git.launchpad.net/~ondrak/+git/u-boot
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.2-uc
        source-depth: 1
        override-build: |
            # copy in place dtsi with pub part of kernel signing key
            cp ${SNAPCRAFT_STAGE}/u-boot-pubkey.dtsi \
               ${SNAPCRAFT_PART_BUILD}/arch/arm/dts/u-boot-pubkey.dtsi
            # Add GIT revision to the local version
            head=`git rev-parse --verify --short HEAD 2> /dev/null`
            printf "%s%s%s" "-5.4.70-2.3.0" +g $head > .scmversion
            export CROSS_COMPILE="aarch64-linux-gnu-"
            export CC="aarch64-linux-gnu-gcc"
            # TODO: export ARCH=arm64
            make imx8mm_evk_config
            make -j$(nproc)
            cp u-boot.bin ${SNAPCRAFT_PART_INSTALL}/u-boot.bin
            cp spl/u-boot-spl.bin ${SNAPCRAFT_PART_INSTALL}/u-boot-spl.bin
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/imx-boot-tools
            cp u-boot-nodtb.bin ${SNAPCRAFT_PART_INSTALL}/imx-boot-tools
            cp u-boot.dtb \
               ${SNAPCRAFT_PART_INSTALL}/imx-boot-tools/imx8mm-evk.dtb
            # copy tools/mkimage tool for imx-boot stage
            cp tools/mkimage ${SNAPCRAFT_PART_INSTALL}
            tools/mkenvimage -r -s 4096 -o ${SNAPCRAFT_PART_INSTALL}/boot.sel - < /dev/null
            touch ${SNAPCRAFT_PART_INSTALL}/uboot.conf
        prime:
            - boot.sel
            - uboot.conf

    imx-firmware:
        plugin: nil
        override-pull: |
            wget https://www.nxp.com/lgfiles/NMG/MAD/YOCTO/firmware-imx-8.10.bin \
                 -O firmware-imx.bin
        override-build: |
            chmod +x firmware-imx.bin
            ./firmware-imx.bin --force --auto-accept
            cp -r firmware-imx-*/firmware ${SNAPCRAFT_PART_INSTALL}
        prime:
            - -*

    imx-boot:
        after:
            - arm-trusted-firmware
            - imx-firmware
            - optee-os
            - u-boot
        plugin: nil
        source: https://source.codeaurora.org/external/imx/imx-mkimage.git
        source-type: git
        source-tag: rel_imx_5.4.70_2.3.2
        source-depth: 1
        override-build: |
            platform="imx8mm"
            # firmware files
            for ddr_firmware in lpddr4_pmu_train_1d_imem.bin lpddr4_pmu_train_1d_dmem.bin lpddr4_pmu_train_2d_imem.bin lpddr4_pmu_train_2d_dmem.bin; do
              cp ${SNAPCRAFT_STAGE}/firmware/ddr/synopsys/${ddr_firmware} iMX8M
            done
            cp ${SNAPCRAFT_STAGE}/firmware/hdmi/cadence/signed_dp_imx8m.bin iMX8M
            cp ${SNAPCRAFT_STAGE}/firmware/hdmi/cadence/signed_hdmi_imx8m.bin iMX8M
            # atf
            cp ${SNAPCRAFT_STAGE}/bl31-${platform}.bin-optee iMX8M/bl31.bin
            # optee
            cp ${SNAPCRAFT_STAGE}/tee.bin iMX8M
            # u-boot
            cp ${SNAPCRAFT_STAGE}/u-boot.bin iMX8M
            cp ${SNAPCRAFT_STAGE}/u-boot-spl.bin iMX8M
            cp ${SNAPCRAFT_STAGE}/imx-boot-tools/u-boot-nodtb.bin iMX8M
            cp ${SNAPCRAFT_STAGE}/imx-boot-tools/${platform}-evk.dtb iMX8M
            # setup link to mkimage_uboot
            ln -sf ${SNAPCRAFT_STAGE}/mkimage iMX8M/mkimage_uboot
            make SOC=iMX8MM flash_evk
            cp iMX8M/flash.bin ${SNAPCRAFT_PART_INSTALL}/
        organize:
            flash.bin: blobs/imx-boot.bin

    flash-script: # uuu flash script
        plugin: nil
        override-build: |
          # get seed offset and size from gadget yaml
          concert_size() {
            case $1 in
              (0)  seed_size="0" ;;
              (*G | *g) echo $(expr $(echo $1 | sed -e 's/G//g' -e 's/g//g') \* 1024 \* 1024 \* 1024) ;;
              (*M | *m) echo $(expr $(echo $1 | sed -e 's/M//g' -e 's/m//g') \* 1024 \* 1024) ;;
              (*K | *k) echo $(expr $(echo $1 | sed -e 's/K//g' -e 's/k//g') \* 1024) ;;
              (*) echo ${1} ;;
            esac
          }
          seed_offset=$(yq eval '.volumes.[].structure.[] | select(.name == "ubuntu-seed") | .offset' ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml)
          seedsize=$(yq eval '.volumes.[].structure.[] | select(.name == "ubuntu-seed") | .size' ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml)
          seed_uuid=$(yq eval '.volumes.[].structure.[] | select(.name == "ubuntu-seed") | .type' ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml)
          seed_size=$(concert_size ${seedsize})

          cat << EOF > ${SNAPCRAFT_PART_INSTALL}/uc.lst
          uuu_version 1.4.69

          # This command will be run when i.MX6/7 i.MX8MM, i.MX8MQ
          SDP: boot -f imx-boot.bin

          # This command will be run when ROM support stream mode
          # i.MX8QXP, i.MX8QM
          SDPS: boot -f imx-boot.bin

          # These commands will be run when use SPL and will be skipped if no spl
          # SDPU will be deprecated. please use SDPV instead of SDPU
          # {
          SDPU: delay 1000
          SDPU: write -f imx-boot.bin -offset 0x57c00
          SDPU: jump
          # }

          # These commands will be run when use SPL and will be skipped if no spl
          # if (SPL support SDPV)
          # {
          SDPV: delay 1000
          SDPV: write -f imx-boot.bin -skipspl
          SDPV: jump
          # }

          # Fastboot commands
          # Set vars, maybe not needed as we reflash u-boot?
          FB: ucmd setenv fastboot_dev mmc
          FB: ucmd setenv mmcdev \${emmc_dev}
          # Select existing emmc for fb (2 for ev kit)
          FB: ucmd mmc dev \${emmc_dev}
          # Flash bootloader
          FB: flash bootloader imx-boot.bin
          # Flash image
          FB: ucmd echo "Flashing UC image"
          FB: flash -raw2sparse all emmc.img
          # Set mmcblk2boot0 as boot partition
          FB: ucmd if env exists emmc_ack; then ; else setenv emmc_ack 0; fi;
          FB: ucmd mmc partconf \${emmc_dev} \${emmc_ack} 1 0
          FB: done
          EOF
        organize:
            uc.lst: blobs/
        build-snaps:
            - yq

build-packages:
    - bison
    - build-essential
    - device-tree-compiler
    - flex
    - gcc-aarch64-linux-gnu
    - libxml2-dev
    - libssl-dev
    - python3
    - python3-crypto
    - python3-pyelftools
    - python3-pycryptodome
    - wget
    - zlib1g-dev
